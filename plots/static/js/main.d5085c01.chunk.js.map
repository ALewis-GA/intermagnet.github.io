{"version":3,"sources":["components/GeomagneticForm.js","components/GeomagneticPlot.js","components/GeomagneticDetails.js","libs/index.js","hooks/useDataApi.js","App.js","serviceWorker.js","index.js"],"names":["GeomagneticForm","props","station","setStation","sampling","setSampling","dataType","setDataType","date","setDate","react_default","a","createElement","Form","Row","Col","Group","controlId","Label","Control","type","placeholder","value","onChange","e","target","as","parseFloat","format","moment","getAverage","component","sum","reduce","b","total","removeAverage","average","map","v","GeomagneticPlot","data","xAvg","x","xComp","xMax","Math","max","apply","Object","toConsumableArray","abs","yAvg","y","yComp","yMax","zAvg","z","zComp","zMax","yaxisrange","ceil","title","concat","meta","yaxis","zeroline","showdividers","range","fixedrange","react_plotly_default","style","width","height","datetime","mode","name","toFixed","xaxis","layout","yaxis2","yaxis3","grid","rows","columns","pattern","GeomagneticDetails","keys","key","Table","striped","bordered","hover","InvalidIAGA2002","Error","MissingComponent","calcInclination","h","atan2","calcHorizontal","sqrt","pow","GeomagneticData","arguments","length","undefined","classCallCheck","this","_meta","_data","_this","val","idx","d","cos","_this2","sin","f","_this3","_this4","_this5","libs","parseIAGA2002","content","lines","split","headers","forEach","line","search","substr","toLowerCase","push","trim","dataFetchReducer","state","action","objectSpread","isLoading","isError","payload","buildUrl","params","source","filename","paramReducer","useDataApi","initialParams","_useReducer","useReducer","assign","_useReducer2","slicedToArray","dispatchParams","_useReducer3","_useReducer4","dispatchFetch","useEffect","didCancel","_ref","asyncToGenerator","regenerator_default","mark","_callee","url","result","wrap","_context","prev","next","axios","sent","t0","stop","fetchData","actions","setSource","setFormat","App","_useDataApi","Container","components_GeomagneticForm","isEmpty","Fragment","components_GeomagneticPlot","components_GeomagneticDetails","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d5085c01.chunk.js","sourcesContent":["import React from 'react';\nimport { Form, Col } from 'react-bootstrap';\nimport moment from 'moment';\n\nconst GeomagneticForm = (props) => {\n  const {\n    station,\n    setStation,\n    sampling,\n    setSampling,\n    dataType,\n    setDataType,\n    date,\n    setDate,\n  } = props;\n\n  return (\n    <Form>\n      <Form.Row>\n        <Col>\n          <Form.Group controlId=\"formStation\">\n            <Form.Label>Station</Form.Label>\n            <Form.Control\n              type=\"text\"\n              placeholder=\"IAGA code\"\n              value={station}\n              onChange={(e) => setStation(e.target.value)}\n            />\n          </Form.Group>\n        </Col>\n        <Col>\n          <Form.Group controlId=\"formSampling\">\n            <Form.Label>Sampling Period</Form.Label>\n            <Form.Control\n              as=\"select\"\n              value={sampling}\n              onChange={(e) => setSampling(parseFloat(e.target.value))}\n            >\n              <option value=\"60\">minute</option>\n              <option value=\"1\">second</option>\n            </Form.Control>\n          </Form.Group>\n        </Col>\n        <Col>\n          <Form.Group controlId=\"formDataType\">\n            <Form.Label>Data Type</Form.Label>\n            <Form.Control\n              as=\"select\"\n              value={dataType}\n              onChange={(e) => setDataType(e.target.value)}\n            >\n              <option>all</option>\n              <option>definitive</option>\n              <option>quasi-definitive</option>\n              <option>provisional</option>\n              <option>variation</option>\n            </Form.Control>\n          </Form.Group>\n        </Col>\n        <Col>\n          <Form.Group controlId=\"formDate\">\n            <Form.Label>Date</Form.Label>\n            <Form.Control\n              type=\"date\"\n              value={date.format(\"YYYY-MM-DD\")}\n              onChange={(e) => setDate(moment(e.target.value))}\n            />\n          </Form.Group>\n        </Col>\n      </Form.Row>\n    </Form>\n  )\n};\n\nexport default GeomagneticForm;","import React from 'react';\nimport Plot from 'react-plotly.js';\n\n/**\n * Calculate average of component while ignore null elements\n */\nconst getAverage = component => {\n  const sum =  component.reduce((a,b) => (b === null) ? a : a+b, 0);\n  const total = component.reduce((a,b) => (b === null) ? a : a+1, 0);\n  return (total === 0) ? null : sum/total;\n};\n\n/**\n * Remove average from component\n */\nconst removeAverage = (component, average) => {\n  return component.map(v => (v === null) ? null : v - average );\n};\n\n\nconst GeomagneticPlot = (props) => {\n  const data = props.data;\n\n  // Calculate the x, y, z average and remove that average\n  const xAvg = getAverage(data.x);\n  const xComp = removeAverage(data.x, xAvg);\n  const xMax = Math.max(...xComp.map(Math.abs));\n  const yAvg = getAverage(data.y);\n  const yComp = removeAverage(data.y, yAvg);\n  const yMax = Math.max(...yComp.map(Math.abs));\n  const zAvg = getAverage(data.z);\n  const zComp = removeAverage(data.z, zAvg);\n  const zMax = Math.max(...zComp.map(Math.abs))\n\n  // round up to the nearest 10th for the yragne\n  const yaxisrange = Math.ceil(Math.max(xMax, yMax, zMax)/10.0)*10;\n\n  const title = `${data.meta['Station Name']} (${data.meta['IAGA CODE']})`\n\n  const yaxis = {\n    title: 'nT',\n    zeroline: false,\n    showdividers: false,\n    range: [-yaxisrange, yaxisrange],\n    fixedrange: true,\n  };\n\n  return (\n    <Plot\n      style={{\n        width: \"100%\",\n        height: 600,\n      }}\n\n      data={[\n        {\n          x: data.datetime,\n          y: xComp,\n          type: 'scatter',\n          mode: 'line',\n          name: `X (${xAvg.toFixed(2)} nT)`,\n        },\n        {\n          x: data.datetime,\n          y: yComp,\n          xaxis: 'x',\n          yaxis: 'y2',\n          type: 'scatter',\n          mode: 'line',\n          name: `Y (${yAvg.toFixed(2)} nT)`,\n        },\n        {\n          x: data.datetime,\n          y: zComp,\n          xaxis: 'x',\n          yaxis: 'y3',\n          type: 'scatter',\n          mode: 'line',\n          name: `Z (${zAvg.toFixed(2)} nT)`,\n        }\n      ]}\n      layout={{\n        yaxis,\n        yaxis2: yaxis,\n        yaxis3: yaxis,\n        title,\n        grid: {\n          rows: 3,\n          columns: 1,\n          pattern: 'independant',\n        },\n      }}\n    />\n  );\n};\n\nexport default GeomagneticPlot;","import React from 'react';\nimport { Table } from 'react-bootstrap';\n\nconst GeomagneticDetails = (props) => {\n  const data = props.data;\n\n  const rows = Object.keys(data.meta).map( (key) => (\n    <tr key={key}>\n      <th>{key}</th>\n      <td>{data.meta[key]}</td>\n    </tr>\n  ));\n\n  return (\n    <details>\n      <summary>Additional Details</summary>\n      <Table striped bordered hover>\n        <tbody>\n          { rows }\n        </tbody>\n      </Table>\n    </details>\n  )\n};\n\nexport default GeomagneticDetails;","/**\n * @author Charles Blais <charles.blais@canada.ca>\n * @description\n *  Magnetic data library\n *  Parse common IAGA2002 format message\n */\n// Custom Errors\nclass InvalidIAGA2002 extends Error {};\nclass MissingComponent extends Error {};\n\nconst calcDeclination = (x, y) => Math.atan2(y, x);\nconst calcInclination = (h, z) => Math.atan2(z, h);\nconst calcHorizontal = (x, y) => Math.sqrt(Math.pow(x, 2) + Math.pow(y, 2));\nconst calcNorth = (h, d) => h * Math.cos(d);\nconst calcEast = (h, d) => h * Math.sin(d);\n\n/**\n * Geomagnetic data handler and response\n */\nclass GeomagneticData {\n    /**\n     * @description\n     *  Handler for data object properties\n     * @param {Object} data \n     */\n    constructor(meta={}, data = {}) {\n        this._meta = meta;\n        this._data = data;\n    }\n\n    get isEmpty(){\n        return !Object.keys(this._meta).length;\n    }\n\n    get meta(){\n        return this._meta;\n    }\n\n    get data(){\n        return this._data;\n    }\n\n    get datetime(){\n        return this._data.datetime;\n    }\n\n    get x(){\n        if ('x' in this._data) {\n            return this._data.x;\n        } else if('h' in this._data && 'd' in this._data) {\n            return this._data.h.map((val, idx) => {\n                return calcNorth(val, this._data.d[idx]);\n            });\n        }\n        throw new MissingComponent(\"Require x or (h and d) components\");\n    }\n\n    get y(){\n        if ('y' in this._data) {\n            return this._data.y;\n        } else if('h' in this._data && 'd' in this._data) {\n            return this._data.h.map((val, idx) => {\n                return calcEast(val, this._data.d[idx]);\n            });\n        }\n        throw new MissingComponent(\"Require y or (h and d) components\");\n    }\n\n    get z(){\n        if ('z' in this._data ){\n            return this._data.z\n        }\n        throw new MissingComponent(\"Require z component\");\n    }\n\n    get f(){\n        if ('f' in this._data ){\n            return this._data.f\n        }\n        throw new MissingComponent(\"Require f component\");\n    }\n\n    get d(){\n        if ('d' in this._data) {\n            return this._data.d;\n        } else if('x' in this._data && 'y' in this._data) {\n            return this._data.x.map((val, idx) => {\n                return calcDeclination(val, this._data.y[idx]);\n            });\n        }\n        throw new MissingComponent(\"Require d or (x and y) components\");\n    }\n\n    get h(){\n        if ('h' in this._data) {\n            return this._data.h;\n        } else if('x' in this._data && 'y' in this._data) {\n            return this._data.h.map((val, idx) => {\n                return calcHorizontal(val, this._data.y[idx]);\n            });\n        }\n        throw new MissingComponent(\"Require h or (x and y) components\");\n    }\n\n    get i(){\n        if ('i' in this._data) {\n            return this._data['i'];\n        } else if('z' in this._data && 'h' in this._data) {\n            return this._data.h.map((val, idx) => {\n                return calcInclination(val, this._data.z[idx]);\n            });\n        } else if('z' in this._data && 'x' in this._data && 'y' in this._data) {\n            return this._data.x.map((val, idx) => {\n                return calcInclination(calcHorizontal(val, this._data.y[idx]), this._data.z[idx]);\n            });\n        }\n        throw new MissingComponent(\"Require i or (z and h) or (z, x, and y) components\");\n    }\n\n}\n\n/**\n * Parse the content of the IAGA2002 string\n * @param {string} content \n * @returns GeomagneticData\n */\nconst parseIAGA2002 = content => {\n  const lines = content.split(\"\\n\");\n  let headers = [];\n  let data = {\n    'datetime': []\n  };\n  let meta = {};\n\n  // Loop each line of data\n  lines.forEach((line) => {\n    // Header line\n    if (line.search(/^DATE /) !== -1) {\n      line = line.split(/[ ]+/);\n      headers = [3,4,5,6].map(key => {\n        const component = line[key].substr(-1).toLowerCase();\n        data[component] = []; //initialize array\n        return component;\n      });\n    }\n    // Data line\n    else if (line.search(/^[0-9]{4}-[0-9]{2}-[0-9]{2}/) !== -1) {\n      if (headers.length !== 4) {\n        throw new InvalidIAGA2002(\"Missing elements in header\");\n      }\n      line = line.split(/[ ]+/);\n      data['datetime'].push(line[0] + \"T\" + line[1]);\n      headers.forEach((key, idx) => {\n        const value = parseFloat(line[idx+3]);\n        data[key].push((value > 80000) ? null : value);\n      });\n    }\n    // Meta information is any line spaced with a string\n    else if (line.search(/^ [A-Z]/) !== -1) {\n        meta[line.substr(0,22).trim()] = line.substr(23, line.length-23-2).trim();\n    }\n  });\n  return new GeomagneticData(meta, data);\n};\n\nexport default { parseIAGA2002, GeomagneticData };","import { useEffect, useReducer } from 'react';\nimport axios from 'axios';\nimport moment from 'moment';\nimport libs from '../libs';\n\n\nconst FETCH_INIT = 'FETCH_INIT';\nconst FETCH_SUCCESS = 'FETCH_SUCCESS';\nconst FETCH_FAILURE = 'FETCH_FAILURE';\n/**\n * Reducer for URL fetching\n * @param {*} state - previous state\n * @param {*} action - action dispatched\n */\nconst dataFetchReducer = (state, action) => {\n  switch (action.type) {\n    case FETCH_INIT:\n      return {\n        ...state,\n        isLoading: true,\n        isError: false\n      };\n    case FETCH_SUCCESS:\n      return {\n        ...state,\n        isLoading: false,\n        isError: false,\n        data: action.payload,\n      };\n    case FETCH_FAILURE:\n      return {\n        ...state,\n        isLoading: false,\n        isError: true,\n      };\n    default:\n      throw new Error();\n  }\n};\n\n\n/**\n * Build the URL for query\n * @param {*} params - as found in param reducer\n */\nconst buildUrl = (params) => {\n  let {\n    source,\n    station,\n    sampling,\n    dataType,\n    format,\n    date,\n  } = params;\n\n  // Convert station\n  station = station.toLowerCase();\n\n  // Convert sampling\n  switch (sampling) {\n    case 60:\n      sampling = 'minute';\n      break;\n    case 1:\n      sampling = 'second';\n      break;\n    default:\n      throw new Error(\"Unknown sampling period\");\n  }\n\n  // Convert date to moment if not yet done so\n  date = (date instanceof moment) ? date : moment(date);\n\n  const filename = `${station}${date.format(\"YYYYMMDD\")}${dataType.substr(0,1)}${sampling.substr(0,3)}.${sampling.substr(0,3)}`\n  return `${source}/${sampling}/${dataType}/${format}/${date.format(\"YYYY/MM\")}/${filename}`;\n};\n\n\nconst SET_SOURCE = 'SET_SOURCE';\nconst SET_STATION = 'SET_STATION';\nconst SET_SAMPLING = 'SET_SAMPLING';\nconst SET_DATATYPE = 'SET_DATATYPE';\nconst SET_FORMAT = 'SET_FORMAT';\nconst SET_DATE = 'SET_DATE';\n/**\n * Reducer for param setting\n * @param {*} state - previous state\n * @param {*} action - action dispatched\n */\nconst paramReducer = (state, action) => {\n  switch (action.type) {\n    case SET_SOURCE:\n      return { ...state, source: action.payload };\n    case SET_STATION:\n      return { ...state, station: action.payload };\n    case SET_SAMPLING:\n      return { ...state, sampling: action.payload };\n    case SET_DATATYPE:\n      return { ...state, dataType: action.payload };\n    case SET_FORMAT:\n      return { ...state, format: action.payload };\n    case SET_DATE:\n      return { ...state, date: action.payload };\n    default:\n      throw new Error();\n  }\n}\n\n\n/**\n * React Hook - Fetch IAGA2002 from the web and parse the content\n */\nconst useDataApi = (initialParams) => {\n  const [params, dispatchParams] = useReducer(paramReducer, Object.assign({\n    source: '',\n    station: '',\n    sampling: 60,\n    dataType: 'variation',\n    format: 'IAGA2002',\n    date: moment(),\n  }, initialParams));\n\n  const [state, dispatchFetch] = useReducer(dataFetchReducer, {\n    isLoading: false,\n    isError: false,\n    data: new libs.GeomagneticData(),\n  });\n\n  useEffect(() => {\n    let didCancel = false;\n    const fetchData = async () => {\n      dispatchFetch({ type: FETCH_INIT });\n      try {\n        const url = buildUrl(params)\n        const result = await axios(url);\n        if (!didCancel) {\n          dispatchFetch({ type: FETCH_SUCCESS, payload: libs.parseIAGA2002(result.data) });\n        }\n      } catch (error) {\n        if (!didCancel) {\n          dispatchFetch({ type: FETCH_FAILURE });\n        }\n      }\n    };\n\n    fetchData();\n\n    return () => {\n      didCancel = true;\n    };\n  }, [params]);\n\n  const actions = {\n    setSource: source => dispatchParams({type: SET_SOURCE, payload: source}),\n    setStation: station => dispatchParams({type: SET_STATION, payload: station}),\n    setSampling: sampling => dispatchParams({type: SET_SAMPLING, payload: sampling}),\n    setDataType: dataType => dispatchParams({type: SET_DATATYPE, payload: dataType}),\n    setFormat: format => dispatchParams({type: SET_FORMAT, payload: format}),\n    setDate: date => dispatchParams({type: SET_DATE, payload: date}),\n  }\n\n  return { ...state, ...params, ...actions };\n};\n\nexport default useDataApi;","/**\n * @author Charles Blais <charles.blais@canada.ca>\n * \n * Plotting of geomagnetic data\n */\nimport React from 'react';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport moment from 'moment';\n\nimport './App.css';\nimport GeomagneticForm from './components/GeomagneticForm';\nimport GeomagneticPlot from './components/GeomagneticPlot';\nimport GeomagneticDetails from './components/GeomagneticDetails';\n\n// Hooks\nimport useDataApi from './hooks/useDataApi';\n\nconst App = () => {\n  const {\n    data,\n    station,\n    setStation,\n    sampling,\n    setSampling,\n    dataType,\n    setDataType,\n    date,\n    setDate,\n  } = useDataApi({\n    source: 'http://origin1.intermagnet.org/data/',\n    station: 'ott',\n    date: moment(),\n  });\n\n  return (\n    <Container>\n      <Row>\n        <Col>\n        <GeomagneticForm\n          station={station}\n          setStation={setStation}\n          sampling={sampling}\n          setSampling={setSampling}\n          dataType={dataType}\n          setDataType={setDataType}\n          date={date}\n          setDate={setDate}\n        />\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n        { data.isEmpty\n          ? (\n            <div>Loading...</div>\n          ):(\n            <React.Fragment>\n              <GeomagneticPlot data={data} />\n              <GeomagneticDetails data={data} />\n            </React.Fragment>\n          )\n        }    \n        </Col>\n      </Row>  \n    </Container>\n  )\n}\n\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}